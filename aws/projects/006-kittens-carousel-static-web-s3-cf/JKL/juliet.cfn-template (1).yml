AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Kittens-Carousel-Static-Web application. 
  This application  deployed on AWS S3 as static website.
  Application  served to public through domain name of the company using AWS Cloudfront and Route 53.
  The application stack take the DNS name of an existing Amazon Route 53 
  hosted zone e.g. `clarusway.us` from the user and the full domain name e.g. `kittens.clarusway.us` 
  for the web application. The Web Application files served from S3 bucket 
  which  configured as a static website host and the content  reachable from anywhere.
  Cloudfront  set as a cache server which points to S3 bucket of the web app.
  The Application files should be uploaded to the application S3 bucket 
  from local git repo using AWS CLI commands.
  
Parameters:
  DomainRoot:
    Description: "Root domain name for the Route53 records. 
    Must not be FQDN such as \"example.com\""
    Type: String

  FullDomain:
    Description: "Domain name for your website (www.example.com)"
    Type: String
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  
Resources:
  myS3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref FullDomain
      PublicAccessBlockConfiguration:
        BlockPublicAcls: False
        BlockPublicPolicy: False
        IgnorePublicAcls: False
        RestrictPublicBuckets: False
      WebsiteConfiguration:
        IndexDocument: index.html
      AccessControl: PublicRead  
  
  myBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref myS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - s3:GetObject
            Resource: !Join
              - ""
              - - !GetAtt myS3Bucket.Arn
                - "/*"

  myCloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig: #required
        Aliases: 
          - !Ref FullDomain
        DefaultCacheBehavior: 
          AllowedMethods: 
            - GET 
            - HEAD 
          ForwardedValues: 
            Cookies: 
              Forward: none 
            QueryString: true 
          TargetOriginId: Bucket
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true 
        HttpVersion: http2
        IPV6Enabled: true 
        Origins:
          - Id: Bucket
            DomainName: !GetAtt myS3Bucket.DomainName
            CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: http-only
        PriceClass: PriceClass_100 
        ViewerCertificate: 
            AcmCertificateArn: !Ref mySSLCert
            MinimumProtocolVersion: TLSv1.2_2019
            SslSupportMethod: sni-only
  
  mySSLCert:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      CertificateTransparencyLoggingPreference: DISABLED
      DomainName: !Ref FullDomain
      DomainValidationOptions:
        - DomainName: !Ref FullDomain
          ValidationDomain: !Ref DomainRoot 
      ValidationMethod: DNS
  
  myRoute53RecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneName: !Join ['', [!Ref 'DomainRoot', .]]
      RecordSets:
        - AliasTarget: 
            DNSName: !GetAtt myCloudFrontDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2
          Name: !Ref FullDomain
          Type: A
    
Outputs:
  myS3Bucket:
    Description: ARN of S3 bucket hosting the website
    Value: !GetAtt myS3Bucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}myS3Bucket'
  CloudFrontDomainName:
    Description: Endpoint for Kittens Cloudfront Distribution
    Value: !GetAtt 'myCloudFrontDistribution.DomainName'
  FullDomainNames:
    Description: Full DomainName of Kittens Carousel Application
    Value: !Ref 'FullDomain'